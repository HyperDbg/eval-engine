#ifndef PARSE_TABLE_H
#define PARSE_TABLE_H
#include "scanner.h"
#define RULES_COUNT 51
#define TERMINAL_COUNT 32
#define NONETERMINAL_COUNT 24
#define START_VARIABLE "S"
#define MAX_RHS_LEN 5
const struct _TOKEN Lhs[RULES_COUNT]= 
{
	{NON_TERMINAL, "S"},
	{NON_TERMINAL, "S'"},
	{NON_TERMINAL, "S'"},
	{NON_TERMINAL, "C"},
	{NON_TERMINAL, "E0"},
	{NON_TERMINAL, "E0'"},
	{NON_TERMINAL, "E0'"},
	{NON_TERMINAL, "E1"},
	{NON_TERMINAL, "E1'"},
	{NON_TERMINAL, "E1'"},
	{NON_TERMINAL, "E2"},
	{NON_TERMINAL, "E2'"},
	{NON_TERMINAL, "E2'"},
	{NON_TERMINAL, "E3"},
	{NON_TERMINAL, "E3'"},
	{NON_TERMINAL, "E3'"},
	{NON_TERMINAL, "E4"},
	{NON_TERMINAL, "E4'"},
	{NON_TERMINAL, "E4'"},
	{NON_TERMINAL, "E5"},
	{NON_TERMINAL, "E5'"},
	{NON_TERMINAL, "E5'"},
	{NON_TERMINAL, "E6"},
	{NON_TERMINAL, "E6'"},
	{NON_TERMINAL, "E6'"},
	{NON_TERMINAL, "E7"},
	{NON_TERMINAL, "E7'"},
	{NON_TERMINAL, "E7'"},
	{NON_TERMINAL, "E8"},
	{NON_TERMINAL, "E8'"},
	{NON_TERMINAL, "E8'"},
	{NON_TERMINAL, "E9"},
	{NON_TERMINAL, "E9'"},
	{NON_TERMINAL, "E9'"},
	{NON_TERMINAL, "E10"},
	{NON_TERMINAL, "E10"},
	{NON_TERMINAL, "E10"},
	{NON_TERMINAL, "E10"},
	{NON_TERMINAL, "E10"},
	{NON_TERMINAL, "E10"},
	{NON_TERMINAL, "E10"},
	{NON_TERMINAL, "E10"},
	{NON_TERMINAL, "E10"},
	{NON_TERMINAL, "E10"},
	{NON_TERMINAL, "E10"},
	{NON_TERMINAL, "E10"},
	{NON_TERMINAL, "E10"},
	{NON_TERMINAL, "E10"},
	{NON_TERMINAL, "E10"},
	{NON_TERMINAL, "E10"},
	{NON_TERMINAL, "E10"}
};
const struct _TOKEN Rhs[RULES_COUNT][MAX_RHS_LEN]= 
{
	{{NON_TERMINAL, "C"},{SPECIAL_TOKEN, ";"},{NON_TERMINAL, "S'"}},
	{{NON_TERMINAL, "C"},{SPECIAL_TOKEN, ";"},{NON_TERMINAL, "S'"}},
	{{EPSILON, "eps"}},
	{{ID, "id"},{SPECIAL_TOKEN, "="},{NON_TERMINAL, "E0"}},
	{{NON_TERMINAL, "E1"},{NON_TERMINAL, "E0'"}},
	{{SPECIAL_TOKEN, "|"},{NON_TERMINAL, "E1"},{SEMANTIC_RULE, "@OR"},{NON_TERMINAL, "E0'"}},
	{{EPSILON, "eps"}},
	{{NON_TERMINAL, "E2"},{NON_TERMINAL, "E1'"}},
	{{UNKNOWN, "^"},{NON_TERMINAL, "E2"},{SEMANTIC_RULE, "@XOR"},{NON_TERMINAL, "E1'"}},
	{{EPSILON, "eps"}},
	{{NON_TERMINAL, "E3"},{NON_TERMINAL, "E2'"}},
	{{UNKNOWN, "&"},{NON_TERMINAL, "E3"},{SEMANTIC_RULE, "@AND"},{NON_TERMINAL, "E2'"}},
	{{EPSILON, "eps"}},
	{{NON_TERMINAL, "E4"},{NON_TERMINAL, "E3'"}},
	{{UNKNOWN, ">>"},{NON_TERMINAL, "E4"},{SEMANTIC_RULE, "@ASR"},{NON_TERMINAL, "E3'"}},
	{{EPSILON, "eps"}},
	{{NON_TERMINAL, "E5"},{NON_TERMINAL, "E4'"}},
	{{UNKNOWN, "<<"},{NON_TERMINAL, "E5"},{SEMANTIC_RULE, "@ASL"},{NON_TERMINAL, "E4'"}},
	{{EPSILON, "eps"}},
	{{NON_TERMINAL, "E6"},{NON_TERMINAL, "E5'"}},
	{{SPECIAL_TOKEN, "+"},{NON_TERMINAL, "E6"},{SEMANTIC_RULE, "@ADD"},{NON_TERMINAL, "E5'"}},
	{{EPSILON, "eps"}},
	{{NON_TERMINAL, "E7"},{NON_TERMINAL, "E6'"}},
	{{SPECIAL_TOKEN, "-"},{NON_TERMINAL, "E7"},{SEMANTIC_RULE, "@SUB"},{NON_TERMINAL, "E6'"}},
	{{EPSILON, "eps"}},
	{{NON_TERMINAL, "E8"},{NON_TERMINAL, "E7'"}},
	{{SPECIAL_TOKEN, "*"},{NON_TERMINAL, "E8"},{SEMANTIC_RULE, "@MUL"},{NON_TERMINAL, "E7'"}},
	{{EPSILON, "eps"}},
	{{NON_TERMINAL, "E9"},{NON_TERMINAL, "E8'"}},
	{{SPECIAL_TOKEN, "/"},{NON_TERMINAL, "E9"},{SEMANTIC_RULE, "@DIV"},{NON_TERMINAL, "E8'"}},
	{{EPSILON, "eps"}},
	{{NON_TERMINAL, "E10"},{NON_TERMINAL, "E9'"}},
	{{UNKNOWN, "%"},{NON_TERMINAL, "E10"},{SEMANTIC_RULE, "@MOD"},{NON_TERMINAL, "E9'"}},
	{{EPSILON, "eps"}},
	{{UNKNOWN, "poi"},{SPECIAL_TOKEN, "("},{NON_TERMINAL, "E0"},{SEMANTIC_RULE, "@POI"},{SPECIAL_TOKEN, ")"}},
	{{UNKNOWN, "db"},{SPECIAL_TOKEN, "("},{NON_TERMINAL, "E0"},{SEMANTIC_RULE, "@DB"},{SPECIAL_TOKEN, ")"}},
	{{UNKNOWN, "dd"},{SPECIAL_TOKEN, "("},{NON_TERMINAL, "E0"},{SEMANTIC_RULE, "@DD"},{SPECIAL_TOKEN, ")"}},
	{{UNKNOWN, "dw"},{SPECIAL_TOKEN, "("},{NON_TERMINAL, "E0"},{SEMANTIC_RULE, "@DW"},{SPECIAL_TOKEN, ")"}},
	{{UNKNOWN, "dq"},{SPECIAL_TOKEN, "("},{NON_TERMINAL, "E0"},{SEMANTIC_RULE, "@DQ"},{SPECIAL_TOKEN, ")"}},
	{{UNKNOWN, "str"},{SPECIAL_TOKEN, "("},{NON_TERMINAL, "E0"},{SEMANTIC_RULE, "@STR"},{SPECIAL_TOKEN, ")"}},
	{{UNKNOWN, "wstr"},{SPECIAL_TOKEN, "("},{NON_TERMINAL, "E0"},{SEMANTIC_RULE, "@WSTR"},{SPECIAL_TOKEN, ")"}},
	{{UNKNOWN, "sizeof"},{SPECIAL_TOKEN, "("},{NON_TERMINAL, "E0"},{SEMANTIC_RULE, "@SIZEOF"},{SPECIAL_TOKEN, ")"}},
	{{UNKNOWN, "not"},{SPECIAL_TOKEN, "("},{NON_TERMINAL, "E0"},{SEMANTIC_RULE, "@NOT"},{SPECIAL_TOKEN, ")"}},
	{{UNKNOWN, "neg"},{SPECIAL_TOKEN, "("},{NON_TERMINAL, "E0"},{SEMANTIC_RULE, "@NEG"},{SPECIAL_TOKEN, ")"}},
	{{UNKNOWN, "hi"},{SPECIAL_TOKEN, "("},{NON_TERMINAL, "E0"},{SEMANTIC_RULE, "@HI"},{SPECIAL_TOKEN, ")"}},
	{{UNKNOWN, "low"},{SPECIAL_TOKEN, "("},{NON_TERMINAL, "E0"},{SEMANTIC_RULE, "@LOW"},{SPECIAL_TOKEN, ")"}},
	{{SPECIAL_TOKEN, "("},{NON_TERMINAL, "E0"},{SPECIAL_TOKEN, ")"}},
	{{SEMANTIC_RULE, "@PUSH"},{UNKNOWN, "reg"}},
	{{SEMANTIC_RULE, "@PUSH"},{HEX, "num"}},
	{{SEMANTIC_RULE, "@PUSH"},{UNKNOWN, "func"}},
	{{SEMANTIC_RULE, "@PUSH"},{UNKNOWN, "preg"}}
};
const unsigned int RhsSize[RULES_COUNT]= 
{
3,
3,
1,
3,
2,
4,
1,
2,
4,
1,
2,
4,
1,
2,
4,
1,
2,
4,
1,
2,
4,
1,
2,
4,
1,
2,
4,
1,
2,
4,
1,
2,
4,
1,
5,
5,
5,
5,
5,
5,
5,
5,
5,
5,
5,
5,
3,
2,
2,
2,
2
};
const char* NoneTerminalMap[NONETERMINAL_COUNT]= 
{
"E5'",
"E2'",
"E9'",
"E3'",
"E0'",
"E8'",
"S'",
"E0",
"E1",
"E7",
"E5",
"S",
"E9",
"E1'",
"E6'",
"E10",
"C",
"E2",
"E6",
"E8",
"E3",
"E4'",
"E7'",
"E4"
};
const char* TerminalMap[TERMINAL_COUNT]= 
{
"low",
"%",
"poi",
"not",
"db",
"&",
"preg",
"dd",
"dq",
"neg",
"dw",
"/",
"<<",
"id",
"|",
"^",
"num",
"$",
"=",
"sizeof",
")",
"str",
"-",
"*",
"wstr",
"+",
"reg",
";",
"(",
">>",
"hi",
"func"
};
const int ParseTable[NONETERMINAL_COUNT][TERMINAL_COUNT]= 
{
	{-1		,-1		,-1		,-1		,-1		,21		,-1		,-1		,-1		,-1		,-1		,-1		,21		,-1		,21		,21		,-1		,-1		,-1		,-1		,21		,-1		,-1		,-1		,-1		,20		,-1		,21		,-1		,21		,-1		,-1	},
	{-1		,-1		,-1		,-1		,-1		,11		,-1		,-1		,-1		,-1		,-1		,-1		,-1		,-1		,12		,12		,-1		,-1		,-1		,-1		,12		,-1		,-1		,-1		,-1		,-1		,-1		,12		,-1		,-1		,-1		,-1	},
	{-1		,32		,-1		,-1		,-1		,33		,-1		,-1		,-1		,-1		,-1		,33		,33		,-1		,33		,33		,-1		,-1		,-1		,-1		,33		,-1		,33		,33		,-1		,33		,-1		,33		,-1		,33		,-1		,-1	},
	{-1		,-1		,-1		,-1		,-1		,15		,-1		,-1		,-1		,-1		,-1		,-1		,-1		,-1		,15		,15		,-1		,-1		,-1		,-1		,15		,-1		,-1		,-1		,-1		,-1		,-1		,15		,-1		,14		,-1		,-1	},
	{-1		,-1		,-1		,-1		,-1		,-1		,-1		,-1		,-1		,-1		,-1		,-1		,-1		,-1		,5		,-1		,-1		,-1		,-1		,-1		,6		,-1		,-1		,-1		,-1		,-1		,-1		,6		,-1		,-1		,-1		,-1	},
	{-1		,-1		,-1		,-1		,-1		,30		,-1		,-1		,-1		,-1		,-1		,29		,30		,-1		,30		,30		,-1		,-1		,-1		,-1		,30		,-1		,30		,30		,-1		,30		,-1		,30		,-1		,30		,-1		,-1	},
	{-1		,-1		,-1		,-1		,-1		,-1		,-1		,-1		,-1		,-1		,-1		,-1		,-1		,1		,-1		,-1		,-1		,2		,-1		,-1		,-1		,-1		,-1		,-1		,-1		,-1		,-1		,-1		,-1		,-1		,-1		,-1	},
	{4		,-1		,4		,4		,4		,-1		,4		,4		,4		,4		,4		,-1		,-1		,-1		,-1		,-1		,4		,-1		,-1		,4		,-1		,4		,-1		,-1		,4		,-1		,4		,-1		,4		,-1		,4		,4	},
	{7		,-1		,7		,7		,7		,-1		,7		,7		,7		,7		,7		,-1		,-1		,-1		,-1		,-1		,7		,-1		,-1		,7		,-1		,7		,-1		,-1		,7		,-1		,7		,-1		,7		,-1		,7		,7	},
	{25		,-1		,25		,25		,25		,-1		,25		,25		,25		,25		,25		,-1		,-1		,-1		,-1		,-1		,25		,-1		,-1		,25		,-1		,25		,-1		,-1		,25		,-1		,25		,-1		,25		,-1		,25		,25	},
	{19		,-1		,19		,19		,19		,-1		,19		,19		,19		,19		,19		,-1		,-1		,-1		,-1		,-1		,19		,-1		,-1		,19		,-1		,19		,-1		,-1		,19		,-1		,19		,-1		,19		,-1		,19		,19	},
	{-1		,-1		,-1		,-1		,-1		,-1		,-1		,-1		,-1		,-1		,-1		,-1		,-1		,0		,-1		,-1		,-1		,-1		,-1		,-1		,-1		,-1		,-1		,-1		,-1		,-1		,-1		,-1		,-1		,-1		,-1		,-1	},
	{31		,-1		,31		,31		,31		,-1		,31		,31		,31		,31		,31		,-1		,-1		,-1		,-1		,-1		,31		,-1		,-1		,31		,-1		,31		,-1		,-1		,31		,-1		,31		,-1		,31		,-1		,31		,31	},
	{-1		,-1		,-1		,-1		,-1		,-1		,-1		,-1		,-1		,-1		,-1		,-1		,-1		,-1		,9		,8		,-1		,-1		,-1		,-1		,9		,-1		,-1		,-1		,-1		,-1		,-1		,9		,-1		,-1		,-1		,-1	},
	{-1		,-1		,-1		,-1		,-1		,24		,-1		,-1		,-1		,-1		,-1		,-1		,24		,-1		,24		,24		,-1		,-1		,-1		,-1		,24		,-1		,23		,-1		,-1		,24		,-1		,24		,-1		,24		,-1		,-1	},
	{45		,-1		,34		,42		,35		,-1		,50		,36		,38		,43		,37		,-1		,-1		,-1		,-1		,-1		,48		,-1		,-1		,41		,-1		,39		,-1		,-1		,40		,-1		,47		,-1		,46		,-1		,44		,49	},
	{-1		,-1		,-1		,-1		,-1		,-1		,-1		,-1		,-1		,-1		,-1		,-1		,-1		,3		,-1		,-1		,-1		,-1		,-1		,-1		,-1		,-1		,-1		,-1		,-1		,-1		,-1		,-1		,-1		,-1		,-1		,-1	},
	{10		,-1		,10		,10		,10		,-1		,10		,10		,10		,10		,10		,-1		,-1		,-1		,-1		,-1		,10		,-1		,-1		,10		,-1		,10		,-1		,-1		,10		,-1		,10		,-1		,10		,-1		,10		,10	},
	{22		,-1		,22		,22		,22		,-1		,22		,22		,22		,22		,22		,-1		,-1		,-1		,-1		,-1		,22		,-1		,-1		,22		,-1		,22		,-1		,-1		,22		,-1		,22		,-1		,22		,-1		,22		,22	},
	{28		,-1		,28		,28		,28		,-1		,28		,28		,28		,28		,28		,-1		,-1		,-1		,-1		,-1		,28		,-1		,-1		,28		,-1		,28		,-1		,-1		,28		,-1		,28		,-1		,28		,-1		,28		,28	},
	{13		,-1		,13		,13		,13		,-1		,13		,13		,13		,13		,13		,-1		,-1		,-1		,-1		,-1		,13		,-1		,-1		,13		,-1		,13		,-1		,-1		,13		,-1		,13		,-1		,13		,-1		,13		,13	},
	{-1		,-1		,-1		,-1		,-1		,18		,-1		,-1		,-1		,-1		,-1		,-1		,17		,-1		,18		,18		,-1		,-1		,-1		,-1		,18		,-1		,-1		,-1		,-1		,-1		,-1		,18		,-1		,18		,-1		,-1	},
	{-1		,-1		,-1		,-1		,-1		,27		,-1		,-1		,-1		,-1		,-1		,-1		,27		,-1		,27		,27		,-1		,-1		,-1		,-1		,27		,-1		,27		,26		,-1		,27		,-1		,27		,-1		,27		,-1		,-1	},
	{16		,-1		,16		,16		,16		,-1		,16		,16		,16		,16		,16		,-1		,-1		,-1		,-1		,-1		,16		,-1		,-1		,16		,-1		,16		,-1		,-1		,16		,-1		,16		,-1		,16		,-1		,16		,16	}
};
#endif
